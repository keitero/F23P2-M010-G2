import random

c_avg = [7, 4, 10, 5]
c_dev = [3, 10, 6, 2]

def exploitOnly():
    total_happiness = 0

    # Simulate visiting each cafeteria for the first four days
    happiness_cafeteria_1 = random.normalvariate(c_avg[0], c_dev[0])  # Cafeteria 1
    happiness_cafeteria_2 = random.normalvariate(c_avg[1], c_dev[1])    # Cafeteria 2
    happiness_cafeteria_3 = random.normalvariate(c_avg[2], c_dev[2])  # Cafeteria 3
    happiness_cafeteria_4 = random.normalvariate(c_avg[3], c_dev[3])  # Cafeteria 4

    happiness_values = [happiness_cafeteria_1, happiness_cafeteria_2, happiness_cafeteria_3, happiness_cafeteria_4]

    # Find the best cafeteria based on the highest happiness value
    best_cafeteria = happiness_values.index(max(happiness_values))

    # Visit the best cafeteria for the next 196 days and calculate happiness
    for i in range(196):
        if best_cafeteria == 0:
            mean = c_avg[0]
            dev = c_dev[0]
        elif best_cafeteria == 1:
            mean = c_avg[1]
            dev = c_dev[1]
        elif best_cafeteria == 2:
            mean = c_avg[2]
            dev = c_dev[2]
        else:
            mean = c_avg[3]
            dev = c_dev[3]

        happiness = random.normalvariate(mean, dev)
        total_happiness = total_happiness + happiness

    # Add the happiness values of the first four days
    total_happiness += sum(happiness_values)

    return total_happiness
