c_avg = [7, 4, 10, 5]
c_dev = [3, 10, 6, 2]

import random

def exploitOnly():
    total_happiness = 0

    # Simulate visiting each cafeteria for the first four days
    happiness_cafeteria_1 = random.normalvariate(7, 3)  # Cafeteria 1
    happiness_cafeteria_2 = random.normalvariate(4, 10)    # Cafeteria 2
    happiness_cafeteria_3 = random.normalvariate(10, 6)  # Cafeteria 3
    happiness_cafeteria_4 = random.normalvariate(5, 2)  # Cafeteria 4

    happiness_values = [happiness_cafeteria_1, happiness_cafeteria_2, happiness_cafeteria_3, happiness_cafeteria_4]

    # Find the best cafeteria based on the highest happiness value
    best_cafeteria = happiness_values.index(max(happiness_values))

    # Visit the best cafeteria for the next 196 days and calculate happiness
    for i in range(196):
        if best_cafeteria == 0:
            c_avg = 7
            c_dev = 3
        elif best_cafeteria == 1:
            c_avg = 4
            c_dev = 10
        elif best_cafeteria == 2:
            c_avg = 10
            c_dev = 6
        else:
            c_avg = 4
            c_dev = 2

        happiness = random.normalvariate(c_avg, c_dev)
        total_happiness = total_happiness + happiness

    # Add the happiness values of the first four days
    total_happiness += sum(happiness_values)

    return total_happiness
