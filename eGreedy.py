c_avg=[7,4,10,5] # average happiness
c_dev=[3,10,6,2] # deviation values
# global variables

import random # import the random method used for normalvariate

def exploitOnly():
    e = 10
    return e

def exploreOnly():
    e = 10
    return e # model functions


def eGreedy(e = 10) -> float:# take e as input, default e as 10
    LC1 = []
    LC2 = []
    LC3 = []
    LC4 = []# set four lists to record all the happiness generated by each cafe

    # first 4 days, visit each cafe once
    VC1 = random.normalvariate(c_avg[0],c_dev[0])  # use Normal Distribution to get a random value
    LC1.append(VC1) # add the happiness value into the list
    AC1 = sum(LC1)/len(LC1) # get the current average happiness value for each cafe

    VC2 = random.normalvariate(c_avg[1],c_dev[1])
    LC2.append(VC2)
    AC2 = sum(LC2) / len(LC2)

    VC3 = random.normalvariate(c_avg[2],c_dev[2])
    LC3.append(VC3)
    AC3 = sum(LC3) / len(LC3)

    VC4 = random.normalvariate(c_avg[3],c_dev[3])
    LC4.append(VC4)
    AC4 = sum(LC4) / len(LC4)
    # repeat the step for each cafe once, 196 days left

    # eGreedy requires me to track the highest average value.
    current_highest_average = max(AC1,AC2,AC3,AC4) # find the highest average for the first 4 days
    LA = [AC1,AC2,AC3,AC4] # make all the average into a list which will be used later

    # for the 196 days left, we will use eGreedy
    for i in range(196): # 196 days left, so it should run 196 times
        r = random.random() # get a random r value
        if r < e/100: # when r is smaller than e%, we let it go to random cafe
            i = random.randint(1,4) # get a random cafe number
            if i == 1: # according to the random cafe number, we go to the cafe
                VC1 = random.normalvariate(c_avg[0],c_dev[0])
                LC1.append(VC1)
                AC1 = sum(LC1) / len(LC1) # the same as above, happiness and current average for the cafe
            elif i == 2:
                VC2 = random.normalvariate(c_avg[1],c_dev[1])
                LC2.append(VC2)
                AC2 = sum(LC2)/len(LC2)
            elif i == 3:
                VC3 = random.normalvariate(c_avg[2],c_dev[2])
                LC3.append(VC3)
                AC3 = sum(LC3)/len(LC3)
            else:
                VC4 = random.normalvariate(c_avg[3],c_dev[3])
                LC4.append(VC4)
                AC4 = sum(LC4)/len(LC4)
            current_highest_average = max(AC1, AC2, AC3, AC4) # get the highest after each visit
            LA = [AC1, AC2, AC3, AC4]# make the new average into list

        else: # when r is bigger than e%, we will go to the cafe that has the highest average value
            i = LA.index(max(LA)) # find which cafe has the highest avg happiness now
            if i == 0: # then go to the cafe
                VC1 = random.normalvariate(c_avg[0],c_dev[0])
                LC1.append(VC1)
                AC1 = sum(LC1) / len(LC1) # same way as each visit
            elif i == 1:
                VC2 = random.normalvariate(c_avg[1],c_dev[1])
                LC2.append(VC2)
                AC2 = sum(LC2) / len(LC2)
            elif i == 2:
                VC3 = random.normalvariate(c_avg[2],c_dev[2])
                LC3.append(VC3)
                AC3 = sum(LC3) / len(LC3)
            else:
                VC4 = random.normalvariate(c_avg[3],c_dev[3])
                LC4.append(VC4)
                AC4 = sum(LC4) / len(LC4)
            current_highest_average = max(AC1, AC2, AC3, AC4) # also get the current highest after visit
            LA = [AC1, AC2, AC3, AC4] # make new avg into list

    # when the loop is done, we can get total happiness
    total_happiness = sum(LC1) + sum(LC2) + sum(LC3) + sum(LC4) # get the total happiness by adding all the sum value of the lists
    return  total_happiness # return the result

eGreedy()